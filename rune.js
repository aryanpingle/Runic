const runeIdAndSymbol = [
    // Blank
    ["000000000000000", ""],
    // Vowels
    ["110011100000000", "æ"],
    ["111100100000000", "ɑ:"],
    ["100011100000000", "ɒ"],
    ["100000100000000", "eɪ"],
    ["101111000000000", "ɛ"],
    ["101111100000000", "i:"],
    ["101011100000000", "ɪəʳ"],
    ["110000100000000", "ə"],
    ["101011000000000", "eəʳ"],
    ["101100000000000", "ɪ"],
    ["110000000000000", "aɪ"],
    ["111111000000000", "ɜ:ʳ"],
    ["111111100000000", "oʊ"],
    ["100100000000000", "ɔɪ"],
    ["110111100000000", "u:"],
    ["100111000000000", "ʊ"],
    ["101000000000000", "aʊ"],
    ["111011100000000", "ʊəʳ"],
    // Consonants
    ["100000010100010", "b"],
    ["100000000010110", "tʃ"],
    ["100000010101010", "d"],
    ["100000001011010", "f"],
    ["100000001110010", "g"],
    ["100000010110010", "h"],
    ["100000010001010", "dʒ"],
    ["100000011100010", "k"],
    ["100000010010010", "l"],
    ["100000000101000", "m"],
    ["100000000101100", "n"],
    ["100000011111110", "ŋ"],
    ["100000001010010", "p"],
    ["100000011010010", "r"],
    ["100000011011010", "s"],
    ["100000001111110", "ʃ"],
    ["100000001010110", "t"],
    ["100000011010110", "θ"],
    ["100000010111010", "ð"],
    ["100000010100110", "v"],
    ["100000001000100", "w"],
    ["100000010010110", "j"],
    ["100000010110110", "z"],
    ["100000011101110", "ʒ"],
];

const runeIdToSymbol = Object.fromEntries(
    runeIdAndSymbol.map(([id, symbol]) => [id, symbol])
);

const symbolToRuneId = Object.fromEntries(
    runeIdAndSymbol.map(([id, symbol]) => [symbol, id])
);

function getRune(symbol = "") {
    // Order matters
    return `
    <g class="rune">
        <g class="rune-lines-guide">
            ${getRuneLines()}
        </g>
        <g class="rune-lines-actual">
            ${getRuneLines()}
        </g>
        <g class="rune-lines-hover">
            ${getRuneLines()}
        </g>
    </g>
    `;
}

function getRuneLines() {
    // prettier-ignore
    const lineCoords = [
        [[0, 3], [2, 3]], // line 0
        [[1, 0], [2, 1]], // line 1
        [[2, 5], [1, 6]], // line 2
        [[1, 6], [0, 5]], // line 3
        [[0, 5], [0, 4]], // line 4
        [[0, 3], [0, 1]], // line 5
        [[0, 1], [1, 0]], // line 6
        [[1, 0], [1, 2]], // line 7
        [[2, 1], [1, 2]], // line 8
        [[1, 4], [2, 5]], // line 9
        [[1, 4], [1, 6]], // line 10
        [[1, 4], [0, 5]], // line 11
        [[1, 2], [0, 1]], // line 12
        [[1, 2], [1, 3]], // line 13
    ];

    lineCoords.forEach((coords) => {
        coords[0][0] *= 1.5;
        coords[1][0] *= 1.5;
    });

    const lineHTML = lineCoords
        .map(([p1, p2], lineIndex) => {
            return `
        <line
            class="rune-line"
            rune-line-index="${lineIndex}"
            x1="${p1[0]}"
            y1="${p1[1]}"
            x2="${p2[0]}"
            y2="${p2[1]}"
        >
        </line>`;
        })
        .join("\n");

    return lineHTML;
}
