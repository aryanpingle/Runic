var a=self.registration.scope.includes("127.0.0.1")||self.registration.scope.includes("localhost"),o=(e,t="rgb(128, 128, 128)")=>a&&console.log(`%c${e}`,`color: black !important; background-color: ${t};`),l=!a,f="runic-cache-1",s=null;self.addEventListener("install",e=>{o("Service Worker Installed"),self.skipWaiting()});self.addEventListener("activate",async e=>{o("Service Worker Activated"),e.waitUntil((async()=>{await clients.claim()})())});self.addEventListener("fetch",e=>{e.respondWith(l?d(e):fetch(e.request))});function h(e){return!!(e.includes("googletagmanager.com/gtag")||e.includes("ipa_dict.json")||e.includes("fonts.googleapis.com")||/\.(png|webp|jpg|jpeg)$/.test(e))}async function d(e){let t=e.request;if(t.url.includes("google-analytics.com"))return await fetch(t);if(s==null&&(s=await caches.open(f)),h(t.url)){let n=await s.match(t);return n===void 0?await fetch(t).then(c=>(i(t,c),c)):n}return await p(t)}function i(e,t){let n=t.clone();s.put(e,n)}async function g(e){let t=await fetch(e);return t.ok&&i(e,t),t}async function p(e){let t=new URL(e.url);t.search="",t.hash="";let n=t.toString(),c=new Request(n);try{return await g(c)}catch(u){let r=await s.match(c);if(r===void 0)throw u;return r}}
